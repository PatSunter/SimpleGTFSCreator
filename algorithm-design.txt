
GTFS creator work steps:

 0) create the Agency ID etc (the basics)
 a) Create the Routes list (Read these in from e.g. a config, or shapefile ...)
 b) Create the Stops database (basically a name, location, and ID)

 c) Then we need to connect the Routes to Stops :- via both Trips, and Stoptimes 
    For each route:
     c1) Calculate starting time
     c2) Create a new Trip (linking route to a unique trip ID)
     c3) For each stop (in our original DB) along that route
         - Calculate time it will get there - prev stop time + distance / ave speed 
         - Create and enter a new stoptime object with those details. 

TODOs:-

Figure out details of manipulating times in Python properly to do service
times etc ... http://docs.python.org/2/library/datetime.html#time-objects

http://stackoverflow.com/questions/100210/python-easy-way-to-add-n-seconds-to-a-datetime-time

Also:- functionalise the Converting to GTFS index, etc ...

2013-11-04
----------

Work needed:
 D Ok - current state is that it can read in, and create a one-way schedule.
  So we need to create a two-way ability next ...

Then start improving the input side:-
 D Added ability to handle a set of different periods during the day
    with different headways/frequencies in each period.
    (N.B. haven't bothered to attempt to do this for different days of the
     week, weekend vs weekday - a level of realism that probably isn't a 
     high priority yet.)
 * Start trying to make the network-spec parts more "GIS-like" and per our
    definition.
    Note :- currently, the BZE network file doesn't have attributes for either
     actual distance of routes - OR average speed along them.
     So the Nemtools code calculates distance between stops from actual
     geometry of segments (I think point-point but not sure ...) and then 
     multiplies by one average speed per mode.
   
 * Refactoring the config into a separate file.
 * Practice with actually reading data from shapefiles 
   (See that network-reading script, and also the "geoprocessing with 
    Open Source GIS" online course.)

